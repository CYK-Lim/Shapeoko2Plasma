#!/usr/bin/python
import sys, hal, time, serial

h = hal.component("serial-relays")
h.newpin("testin", hal.HAL_FLOAT, hal.HAL_IN)
h.newpin("relay1B", hal.HAL_BIT, hal.HAL_IN)
h.newpin("relay1C", hal.HAL_BIT, hal.HAL_IN)
h.newpin("relay1D", hal.HAL_BIT, hal.HAL_IN)
h.newpin("relay1E", hal.HAL_BIT, hal.HAL_IN)
h.newpin("relay1F", hal.HAL_BIT, hal.HAL_IN)
h.newpin("relay1G", hal.HAL_BIT, hal.HAL_IN)
h.newpin("relay1H", hal.HAL_BIT, hal.HAL_IN)
h.ready()

sys.stdout.write("PYTHON SERIAL: Finished creating HAL pins\n")
sys.stdout.flush()



try:
    ser = serial.Serial('/dev/ttyMP2', 19200, bytesize=8, parity='E', stopbits=1, timeout=5, xonxoff=0, rtscts=0)
except IOError, (errno, strerror):
    print "I/O error(%s): %s" % (errno, strerror)
except ValueError:
    print "Could not open port."
except SerialException:
    print "Could not configure port."
except:
    print "Unexpected error:", sys.exc_info()[0]
    raise

print "PYTHON SERIAL: Finished initializing Serial Port"

d = ser.getSettingsDict()
print d


'''
ser.write('0')
ser.write('1')
ser.write('0')
ser.write('4')
ser.write('2')
ser.write('0')
ser.write('9')
ser.write('9')
ser.write('0')
ser.write('0')
ser.write('0')
ser.write('1')
ser.write('4')
ser.write('1')
ser.write('0')
ser.write('D')
ser.write('0')
ser.write('A')
'''

input = '010420990001410D0A'
num = ser.write(input.decode("hex"))
print num
print input.decode("hex")

s = ser.read(12)
print s

#ser.close()



rA = 0
rB = 0
rC = 0
rD = 0
rE = 0
rF = 0
rG = 0
rH = 0

'''

# Function to send data.  Uncomment the time.sleep(...) functions if you need more delay between characters.
# The value in the time.sleep(...) functions is in seconds and can be changed as needed.
def serial_command(r, cmd):
    while ser.inWaiting():
        pass
    ser.write('R')
#    time.sleep(0.01)
    ser.write('M')
#    time.sleep(0.01)
    ser.write('1')
#    time.sleep(0.01)
    ser.write(r)
#    time.sleep(0.01)
    if True == cmd:
        ser.write('1')
    else:
        ser.write('0')

'''

try:
    #Main Loop
    while 1:
        if (rA != 0 ):
            rA = 1 #h.relay1A
            #serial_command('A', rA)
        if (rB != h.relay1B):
            rB = h.relay1B
            #serial_command('B', rB)
        if (rC != h.relay1C):
            rC = h.relay1C
            #serial_command('C', rC)
        if (rD != h.relay1D):
            rD = h.relay1D
            #serial_command('D', rD)
        if (rD != h.relay1D):
            rD = h.relay1D
            #serial_command('D', rD)
        if (rE != h.relay1E):
            rE = h.relay1E
            #serial_command('E', rE)
        if (rF != h.relay1F):
            rF = h.relay1F
            #serial_command('F', rF)
        if (rG != h.relay1G):
            rG = h.relay1G
            #serial_command('G', rG)
        if (rH != h.relay1H):
            rH = h.relay1H
            #serial_command('H', rH)

        

except KeyboardInterrupt:
    raise SystemExit
