# Include your customized HAL commands here
# This file will not be overwritten when you run stepconf again
loadusr -Wn powermax ./powermaxSerial.py

# For estop disable of bits
loadrt flipflop count=2
loadrt not count=4
loadrt or2 count=2
loadrt debounce cfg=2,1
loadrt and2 count=2

addf flipflop.0 base-thread
addf flipflop.1 base-thread
addf not.0 base-thread
addf not.1 base-thread
addf not.2 base-thread
addf not.3 base-thread
addf or2.0 base-thread
addf or2.1 base-thread
addf debounce.0 base-thread
addf debounce.1 base-thread
addf and2.0 base-thread
addf and2.1 base-thread
setp debounce.0.delay 1
setp debounce.1.delay 50

#this and2 is to be sure the torch shuts off in case the program stops

net IsRunning halui.program.is-running and2.1.in0
net TorchOnDigOut motion.digital-out-01 and2.1.in1

net ArcOK motion.digital-in-00 <= parport.0.pin-10-in-not 

# this and2 is to only allow THC if the arc is ok
 
net ArcOK and2.0.in0
net THCOnDigOut motion.digital-out-00 and2.0.in1

# If either mothion is disabled or the Digital Out is False, the Flip Flop
# out is false and is only true after the rising edge of the debouce output
# which is used to offset the output one cycle to avoid a race condition

net MotionEnabled not.0.in motion.motion-enabled
net Or0In0 or2.0.in0 not.0.out
net ProgAndTorch and2.1.out not.2.in debounce.0.0.in
net Or0In1 or2.0.in1 not.2.out
setp flipflop.0.data True
net TorchClkIn debounce.0.0.out flipflop.0.clk 
net Torchreset flipflop.0.reset or2.0.out
net TurnTorchOn <= flipflop.0.out        
net TurnTorchOn => parport.0.pin-01-out 

# If either mothion is disabled or the Digital Out is False, the Flip Flop
# out is false and is only true after the rising edge of the debouce output
# which is used to offset the output one cycle to avoid a race condition

net MotionEnabled not.1.in
net Or1In0 or2.1.in0 not.1.out
net THCandARCok and2.0.out not.3.in debounce.0.1.in
net Or1In1 or2.1.in1 not.3.out
setp flipflop.1.data True
net THCclockIn debounce.0.1.out flipflop.1.clk
net THCreset flipflop.1.reset or2.1.out
net THCOn <= flipflop.1.out
net THCOn => parport.0.pin-17-out


net FloatSwitch <= parport.0.pin-13-in 
net ProbeDebnceIn parport.0.pin-13-in-not debounce.1.0.in
# net probe parport.0.pin-13-in-not => motion.probe-input
net ProbeDebnceOut debounce.1.0.out motion.probe-input

